{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAkB3C,OACK,0BAAMC,SAXU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAEzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOb,2BACIO,KAAO,OACPC,MAAST,EACTU,SAnBW,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCNpBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEPC,EAFO,iDAE0CC,UAAUH,GAFpD,+DAGMI,MAAMF,GAHZ,cAGPG,EAHO,gBAIQA,EAAKC,OAJb,uBAINC,EAJM,EAINA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACDC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV/B,kBAcNM,GAdM,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE/B,OACK,yBAAKc,UAAU,0CAEV,yBAAKC,IAAOf,EAAKgB,IAAON,IACxB,+BAAKA,EAAL,OCJFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAC9BqB,KAAM,GACNa,SAAS,IAJuB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAZAC,qBAAW,WAENxB,EAAQC,GACFwB,MAAK,SAAAC,GACDH,EAAS,CACJf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDhByBK,CAAa1B,GAAhCa,EAFqB,EAE3BN,KAAca,EAFa,EAEbA,QACrB,OAEK,oCACK,wBAAIJ,UAAY,yCAAhB,IAA0DhB,EAA1D,KACCoB,GAAW,uBAAGJ,UAAU,uCAAb,aACZ,yBAAKA,UAAY,aACZ,4BAEUH,EAAOJ,KAAI,SAAAC,GAAG,OAET,kBAAC,EAAD,eACKiB,IAAMjB,EAAIC,IACND,WEW7BkB,EA1BM,WAAO,IAAD,EAEc1C,mBAAS,CAAC,cAFxB,mBAEf2C,EAFe,KAEH5C,EAFG,KAGtB,OACK,oCACK,4CACA,kBAAC,EAAD,CAAcA,cAAgBA,IAC9B,6BACA,4BAEU4C,EAAWpB,KAAI,SAAAT,GAAQ,OAClB,kBAAC,EAAD,CACK2B,IAAO3B,EACPA,SAAYA,UCZzC8B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OACL,kBAAC,EAAD,MACFJ,I","file":"static/js/main.bff75242.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n     const [inputValue, setInputValue] = useState('');\r\n\r\n     const handleInputChange = (e) => {\r\n          setInputValue(e.target.value);\r\n     }\r\n\r\n     const handleSubmit = (e) =>{\r\n          e.preventDefault();\r\n          if(inputValue.trim().length > 2){\r\n               \r\n               setCategories(cats => [inputValue, ...cats]);\r\n               setInputValue('');\r\n          }\r\n\r\n     }\r\n\r\n     return (\r\n          <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type = \"text\"\r\n                    value = {inputValue}\r\n                    onChange = { handleInputChange }\r\n                /> \r\n          </form>\r\n     )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n     setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n          const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=TjOM3HKC8wgBjs0Q7NlpcFUarq7ck220`;\r\n          const resp = await fetch(url);\r\n          const {data} = await resp.json();\r\n\r\n          const gifs = data.map( img => {\r\n               return{\r\n                    id: img.id,\r\n                    title: img.title, \r\n                    url: img.images?.downsized_medium.url\r\n               }\r\n          })\r\n\r\n          return gifs; \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n     return (\r\n          <div className='card animate__animated animate__bounce'>    \r\n\r\n               <img src = {url} alt = {title} />\r\n               <p> {title} </p>\r\n\r\n          </div>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n     const {data: images, loading} = useFetchGifs(category);\r\n     return (\r\n               \r\n          <>\r\n               <h3 className = 'animate__animated animate__zoomInDown'> {category} </h3> \r\n               {loading && <p className='animate__animated animate__fadeInUp'>Loading..</p>}\r\n               <div className = 'card-grid'>\r\n                    <ol>\r\n                         {  \r\n                              images.map(img => (\r\n                                   \r\n                                   <GifGridItem\r\n                                        key= {img.id}\r\n                                        {...img} \r\n                                   />\r\n                              ))\r\n                         }\r\n                    </ol>\r\n\r\n               </div>\r\n          \r\n          </>\r\n     )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n     const [state, setState] = useState({\r\n          data: [],\r\n          loading: true\r\n     });\r\n\r\n     useEffect( () => {\r\n\r\n          getGifs(category)\r\n               .then(imgs => {  \r\n                    setState({\r\n                         data: imgs,\r\n                         loading: false\r\n                    });\r\n               })\r\n\r\n     }, [category])\r\n\r\n     return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n     const [categories, setCategories] = useState(['One Punch']);\r\n     return (\r\n          <>  \r\n               <h2>GifExpertApp</h2>\r\n               <AddCategory  setCategories= {setCategories} />\r\n               <hr />\r\n               <ol>\r\n                    {\r\n                         categories.map(category => (\r\n                              <GifGrid \r\n                                   key = {category}\r\n                                   category = {category}\r\n                              />\r\n                         ))\r\n                    }\r\n               </ol>\r\n\r\n          </>\r\n\r\n     );\r\n\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(\n    <GifExpertApp/>,\n  divRoot\n);\n"],"sourceRoot":""}